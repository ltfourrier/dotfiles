def create_left_prompt [] {
  let dir = match (do --ignore-errors { $env.PWD | path relative-to $nu.home-path }) {
    null => $env.PWD
    '' => '~'
    $relative_pwd => ([~ $relative_pwd] | path join)
  }

  let path_color = (if (is-admin) { ansi red_bold } else { ansi green_bold })
  let separator_color = (if (is-admin) { ansi light_red_bold } else { ansi light_green_bold })
  let path_segment = $"($path_color)($dir)"

  $path_segment | str replace --all (char path_sep) $"($separator_color)(char path_sep)($path_color)"
}

def create_right_prompt [] {
  let time_segment = ([
    (ansi reset)
    (ansi magenta)
    (date now | format date '%x %X')
  ] | str join | str replace --regex --all "([/:])" $"(ansi green)${1}(ansi magenta)" |
    str replace --regex --all "([AP]M)" $"(ansi magenta_underline)${1}")

  let last_exit_code = if ($env.LAST_EXIT_CODE != 0) {([
      (ansi rb)
      ($env.LAST_EXIT_CODE)
    ] | str join)
  } else { "" }

  ([$last_exit_code, (char space), $time_segment] | str join)
}

$env.PROMPT_COMMAND = {|| create_left_prompt }
$env.PROMPT_COMMAND_RIGHT = {|| create_right_prompt }

$env.PROMPT_INDICATOR = {|| "> " }
$env.PROMPT_INDICATOR_VI_INSERT = {|| "> " }
$env.PROMPT_INDICATOR_VI_NORMAL = {|| ": " }
$env.PROMPT_MULTILINE_INDICATOR = {|| "::: " }

$env.ENV_CONVERSIONS = {
  "PATH": {
    from_string: { |s| $s | split row (char esep) | path expand --no-symlink }
    to_string: { |v| $v | path expand --no-symlink | str join (char esep) }
  }
  "Path": {
    from_string: { |s| $s | split row (char esep) | path expand --no-symlink }
    to_string: { |v| $v | path expand --no-symlink | str join (char esep) }
  }
}

$env.NU_LIB_DIRS = [
  ($nu.default-config-dir | path join 'scripts')
]

$env.NU_PLUGIN_DIRS = [
  ($nu.default-config-dir | path join 'plugins')
]

$env.SHELL = 'nu'
$env.JAVA_HOME = $'($env.HOME)/JDK/Temurin_21_6/Contents/Home'
$env.EDITOR = 'nvim'
$env.HOMEBREW_PREFIX = '/usr/local'
$env.HOMEBREW_CELLAR = '/usr/local/Cellar'
$env.HOMEBREW_REPOSITORY = '/usr/local/Homebrew'
$env.MANPATH = '/usr/local/share/man'
$env.INFOPATH = '/usr/local/share/info'

let fnm_env = (/usr/local/bin/fnm env --shell bash | lines | each {
    parse --regex 'export (?<key>\w+)=\"(?<value>.+?)\"'
  } | flatten | reduce --fold {} { |it, acc| $acc | upsert $it.key $it.value })
$fnm_env | reject PATH | load-env

$env.PATH = ($env.PATH | split row (char esep) | prepend [
  $fnm_env.PATH,
  $"($env.HOME)/.local/opt/lua/bin",
  "/usr/local/bin",
  "/usr/local/sbin",
  "/usr/local/opt/ruby/bin",
  "/usr/local/lib/ruby/gems/3.3.0/bin"
] | append [
  $"($env.HOME)/.cargo/bin"
])
